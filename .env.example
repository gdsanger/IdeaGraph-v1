# IdeaGraph Environment Configuration Example
# Copy this file to .env and update with your actual values

# ===========================
# Logging Configuration
# ===========================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Directory for log files (relative to project root)
LOG_DIR=logs

# Log file name
LOG_FILE_NAME=ideagraph.log

# Maximum size of log file before rotation (in bytes)
# Default: 5000000 (5 MB)
LOG_MAX_BYTES=5000000

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# ===========================
# Sentry Configuration
# ===========================

# Enable Sentry error tracking (True/False)
ENABLE_SENTRY=False

# Sentry DSN (Data Source Name)
# Get this from your Sentry project settings
# Example: https://examplePublicKey@o0.ingest.sentry.io/0
SENTRY_DSN=

# Application environment (development, staging, production)
APP_ENVIRONMENT=development

# Sentry traces sample rate (0.0 to 1.0)
# 1.0 = 100% of transactions are sent to Sentry
SENTRY_TRACES_SAMPLE_RATE=1.0

# ===========================
# Django Configuration
# ===========================

# Django secret key (generate a new one for production!)
SECRET_KEY=django-insecure-change-this-in-production

# Debug mode (True/False)
DEBUG=True

# Allowed hosts (comma-separated)
ALLOWED_HOSTS=localhost,127.0.0.1

# ===========================
# Database Configuration
# ===========================

# Database URL (optional, defaults to SQLite)
# DATABASE_URL=sqlite:///db.sqlite3

# ===========================
# API Keys
# ===========================

# OpenAI API Key (if using OpenAI services)
OPENAI_API_KEY=

# KiGate API Configuration (if using KiGate services)
KIGATE_API_URL=
KIGATE_API_KEY=

# ===========================
# Authentication
# ===========================

# JWT Secret (use a different secret than Django SECRET_KEY in production)
JWT_SECRET=

# JWT token expiration in hours
JWT_EXPIRATION_HOURS=24

# Password requirements
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_SPECIAL=True
PASSWORD_REQUIRE_NUMBER=True

# ===========================
# Cache Configuration
# ===========================

# Cache backend: 'redis', 'locmem', 'dummy'
# - redis: Redis cache backend (recommended for production)
# - locmem: In-memory cache (default, good for development)
# - dummy: No caching (for testing)
CACHE_BACKEND=redis

# Redis Configuration (only used if CACHE_BACKEND=redis)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Cache timeout in seconds (default: 300 = 5 minutes)
CACHE_DEFAULT_TIMEOUT=300

# ===========================
# GitHub Configuration
# ===========================

# GitHub Personal Access Token
GITHUB_TOKEN=your_github_personal_access_token_here

# GitHub Documentation Sync Interval in minutes (default: 180 = 3 hours)
GITHUB_DOC_SYNC_INTERVAL=180
