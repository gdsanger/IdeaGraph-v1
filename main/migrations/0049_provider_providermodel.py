# Generated by Django 5.2.7 on 2025-10-28 21:42

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0048_add_email_fields_to_task_comment'),
    ]

    operations = [
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Display name for this provider configuration', max_length=255)),
                ('provider_type', models.CharField(choices=[('openai', 'OpenAI'), ('gemini', 'Google Gemini'), ('claude', 'Anthropic Claude'), ('ollama', 'Ollama')], help_text='Type of AI provider', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this provider is active')),
                ('api_key', models.CharField(blank=True, default='', help_text='API key for authentication', max_length=500)),
                ('api_base_url', models.CharField(blank=True, default='', help_text='Base URL for API endpoint', max_length=500)),
                ('api_timeout', models.IntegerField(default=30, help_text='Timeout for API requests in seconds')),
                ('openai_org_id', models.CharField(blank=True, default='', help_text='OpenAI Organization ID (OpenAI only)', max_length=255)),
                ('extra_config', models.JSONField(blank=True, default=dict, help_text='Additional provider-specific configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Provider',
                'verbose_name_plural': 'Providers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProviderModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_id', models.CharField(help_text='Model identifier from provider (e.g., gpt-4, claude-3-opus)', max_length=255)),
                ('display_name', models.CharField(blank=True, default='', help_text='Human-readable display name', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this model is available for use')),
                ('description', models.TextField(blank=True, default='', help_text='Model description')),
                ('capabilities', models.JSONField(blank=True, default=list, help_text='Model capabilities (e.g., chat, completion)')),
                ('context_length', models.IntegerField(blank=True, help_text='Maximum context length in tokens', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional model metadata from provider')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_synced_at', models.DateTimeField(blank=True, help_text='Last time model was synced from provider API', null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='main.provider')),
            ],
            options={
                'verbose_name': 'Provider Model',
                'verbose_name_plural': 'Provider Models',
                'ordering': ['provider', 'model_id'],
                'unique_together': {('provider', 'model_id')},
            },
        ),
    ]
