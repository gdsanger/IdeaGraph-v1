# Generated by Django 5.2.7 on 2025-10-19 11:34

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0011_relation'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source', models.CharField(choices=[('local', 'Local Log'), ('sentry', 'Sentry API')], max_length=20)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=20)),
                ('logger_name', models.CharField(blank=True, default='', max_length=255)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('exception_type', models.CharField(blank=True, default='', max_length=255)),
                ('exception_value', models.TextField(blank=True, default='')),
                ('stack_trace', models.TextField(blank=True, default='')),
                ('file_path', models.CharField(blank=True, default='', max_length=500)),
                ('line_number', models.IntegerField(blank=True, null=True)),
                ('sentry_event_id', models.CharField(blank=True, default='', max_length=100, null=True, unique=True)),
                ('sentry_issue_id', models.CharField(blank=True, default='', max_length=100)),
                ('analyzed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Log Entry',
                'verbose_name_plural': 'Log Entries',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp', 'level'], name='main_logent_timesta_b39dad_idx'), models.Index(fields=['analyzed', 'level'], name='main_logent_analyze_a2a0fb_idx')],
            },
        ),
        migrations.CreateModel(
            name='ErrorAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('is_actionable', models.BooleanField(default=False)),
                ('summary', models.TextField()),
                ('root_cause', models.TextField(blank=True, default='')),
                ('recommended_action', models.TextField(blank=True, default='')),
                ('ai_model', models.CharField(blank=True, default='', max_length=100)),
                ('ai_confidence', models.FloatField(default=0.0)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('task_created', 'Task Created'), ('issue_created', 'GitHub Issue Created')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('github_issue_url', models.URLField(blank=True, default='', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_analyses', to='main.user')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='error_analyses', to='main.task')),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='main.logentry')),
            ],
            options={
                'verbose_name': 'Error Analysis',
                'verbose_name_plural': 'Error Analyses',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='main_errora_status_c6432a_idx'), models.Index(fields=['severity', 'is_actionable'], name='main_errora_severit_d645e9_idx')],
            },
        ),
    ]
