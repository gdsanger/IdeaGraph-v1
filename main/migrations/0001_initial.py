# Generated by Django 5.2.7 on 2025-10-18 06:40

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('openai_api_key', models.CharField(blank=True, default='', max_length=255, verbose_name='OPENAI_API_KEY')),
                ('openai_org_id', models.CharField(blank=True, default='', help_text='OpenAI Organisation ID', max_length=255, verbose_name='OPENAI_ORG_ID')),
                ('client_id', models.CharField(blank=True, default='', help_text='GraphAPI Client ID', max_length=255, verbose_name='CLIENT_ID')),
                ('client_secret', models.CharField(blank=True, default='', help_text='GraphAPI Client Secret', max_length=255, verbose_name='CLIENT_SECRET')),
                ('tenant_id', models.CharField(blank=True, default='', help_text='GraphAPI Tenant', max_length=255, verbose_name='TENANT_ID')),
                ('github_token', models.CharField(blank=True, default='', help_text='GitHub PAT Key', max_length=255, verbose_name='GITHUB_TOKEN')),
                ('chroma_api_key', models.CharField(blank=True, default='', help_text='ChromaDB Api Key (Cloud)', max_length=255, verbose_name='CHROMA_API_KEY')),
                ('chroma_database', models.CharField(blank=True, default='', help_text='ChromaDB Api Key (DATABASE)', max_length=255, verbose_name='CHROMA_DATABASE')),
                ('chroma_tenant', models.CharField(blank=True, default='', help_text='ChromaDB Api Key (TENANT)', max_length=255, verbose_name='CHROMA_TENANT')),
                ('kigate_url', models.CharField(blank=True, default='', max_length=255, verbose_name='KiGateUrl')),
                ('kigate_token', models.CharField(blank=True, default='', max_length=255, verbose_name='KiGateToken')),
                ('max_tags_per_idea', models.IntegerField(default=5, help_text='Anzahl der Tags die bei Items durch die KI gesucht werden sollen', verbose_name='MAX_TAGS_PER_IDEA')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
                'ordering': ['-created_at'],
            },
        ),
    ]
